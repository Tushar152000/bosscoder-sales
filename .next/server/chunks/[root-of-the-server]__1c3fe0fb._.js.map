{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///Users/tusharchauhan/bosscoder/audioListen/mp3-analyzer/src/app/api/analyze-audio/route.ts"],"sourcesContent":["import { NextRequest } from \"next/server\";\n\nexport const runtime = \"nodejs\";           // ensure Node runtime\nexport const dynamic = \"force-dynamic\";    // avoid caching uploads\n\n// ---------- Types ----------\ntype Rules = {\n  minDurationSec?: number;\n  requireKeywords?: string[];\n  forbiddenKeywords?: string[];\n  minWords?: number;\n};\n\ntype AnalyzeStats = { durationSec?: number; wordCount?: number };\n\ntype WordTimestamp = { start: number; end: number; word: string };\n\ntype WhisperSegment = {\n  id: number;\n  start: number;\n  end: number;\n  text: string;\n  words?: WordTimestamp[];\n};\n\ntype WhisperOk = {\n  ok: true;\n  transcript: string;\n  stats: AnalyzeStats;\n  segments?: WhisperSegment[];\n};\ntype WhisperErr = { ok: false; error: string };\n\ntype SectionName = \"greeting\" | \"opening\" | \"discovery\" | \"pitch\" | \"pricing\" | \"closing\";\ntype Section = { name: SectionName; t0: number; t1: number; confidence?: number; triggers?: string[] };\n\ntype KPIs = {\n  totalSec: number;\n  percentTime: Record<SectionName, number>;\n  timeToPricingSec: number | null;\n};\n\ntype Score = { total: number; detail: Record<string, number> };\n\ntype AnalyzeOk = {\n  ok: true;\n  transcript: string;\n  passes: boolean;\n  failures: string[];\n  stats: AnalyzeStats;\n  sections: Section[];\n  kpis: KPIs;\n  score: Score;\n  fileName?: string;\n};\ntype AnalyzeErr = { ok: false; error: string };\ntype AnalyzeResponse = AnalyzeOk | AnalyzeErr;\n\n// ---------- Config ----------\nconst WHISPER_URL =\n  process.env.WHISPER_URL ?? \"http://127.0.0.1:8000/transcribe\";\n\n// ---------- Heuristic segmenter ----------\nconst ORDER = [\"greeting\", \"opening\", \"discovery\", \"pitch\", \"pricing\", \"closing\"] as const;\n\nconst SECTION_CUES: Record<SectionName, RegExp[]> = {\n  greeting:  [/\\b(hi|hello|hey|good (morning|afternoon|evening))\\b/i, /thanks for (joining|taking the time)/i],\n  opening:   [/\\bagenda\\b/i, /\\b(today|on this call) (we|i)('?ll| will)\\b/i, /\\bbefore we start\\b/i],\n  discovery: [/\\bcurrent (process|setup)\\b/i, /\\bpain(s| points)?\\b/i, /\\b(goals?|challenges?)\\b/i, /\\b(can|could) you (tell|walk) me\\b/i],\n  pitch:     [/\\bdemo\\b/i, /\\b(let me )?show\\b/i, /\\bour (product|platform|solution)\\b/i, /\\bfeature(s)?\\b/i],\n  pricing:   [/\\b(price|pricing|cost|budget|discount|contract|quote|per (seat|user|month))\\b/i, /\\bhow much\\b/i, /\\bwhat.*cost\\b/i],\n  closing:   [/\\bnext steps\\b/i, /\\b(i|we)('?ll| will) (send|share|follow up)\\b/i, /\\btrial\\b/i, /\\bPOC\\b/i]\n};\n\nfunction labelChunk(text: string): {\n  label: SectionName;\n  hits: SectionName[];\n  triggers: string[];\n} {\n  const scores: Record<SectionName, number> = {\n    greeting: 0, opening: 0, discovery: 0, pitch: 0, pricing: 0, closing: 0\n  };\n  const hits: SectionName[] = [];\n  for (const name of ORDER) {\n    for (const p of SECTION_CUES[name]) {\n      if (p.test(text)) {\n        scores[name] += 1;\n        hits.push(name);\n      }\n    }\n  }\n  const best = (Object.keys(scores) as SectionName[])\n    .sort((a, b) => (scores[b] - scores[a]) || (ORDER.indexOf(a) - ORDER.indexOf(b)))[0];\n\n  // collect pricing triggers if any\n  const triggers: string[] = [];\n  for (const p of SECTION_CUES.pricing) {\n    const m = text.match(p);\n    if (m) triggers.push(m[0].toLowerCase());\n  }\n\n  return { label: scores[best] ? best : \"discovery\", hits, triggers };\n}\n\nfunction segmentize(segments: WhisperSegment[], minSec = 20): Section[] {\n  if (!segments?.length) return [];\n\n  type Block = {\n    t0: number; t1: number; text: string;\n    label: SectionName; triggers: string[];\n  };\n\n  const blocks: Block[] = [];\n  let cur = { t0: segments[0].start, t1: segments[0].end, text: segments[0].text };\n\n  for (let i = 1; i < segments.length; i++) {\n    const s = segments[i];\n    const curDur = cur.t1 - cur.t0;\n    const gap = s.start - cur.t1;\n    if (curDur < 25 && gap < 3) {\n      cur = { t0: cur.t0, t1: s.end, text: (cur.text + \" \" + s.text).trim() };\n    } else {\n      const { label, triggers } = labelChunk(cur.text);\n      blocks.push({ ...cur, label, triggers });\n      cur = { t0: s.start, t1: s.end, text: s.text };\n    }\n  }\n  const last = labelChunk(cur.text);\n  blocks.push({ ...cur, label: last.label, triggers: last.triggers });\n\n  // smooth sequence and merge adjacent same labels\n  const out: Section[] = [];\n  for (const b of blocks) {\n    if (out.length && out[out.length - 1].name === b.label) {\n      const prev = out[out.length - 1];\n      prev.t1 = b.t1;\n      if (b.label === \"pricing\") {\n        const prevTrig = new Set(prev.triggers ?? []);\n        for (const t of b.triggers) prevTrig.add(t);\n        prev.triggers = Array.from(prevTrig);\n      }\n      continue;\n    }\n    const sec: Section = { name: b.label, t0: b.t0, t1: b.t1 };\n    if (b.label === \"pricing\") {\n      sec.confidence = 0.9;\n      if (b.triggers.length) sec.triggers = Array.from(new Set(b.triggers));\n    }\n    out.push(sec);\n  }\n\n  // merge very short blips into neighbors (except pricing)\n  for (let i = 1; i < out.length - 1; i++) {\n    const s = out[i];\n    if ((s.t1 - s.t0) < minSec && s.name !== \"pricing\") {\n      out[i - 1].t1 = s.t1;\n      out.splice(i, 1); i--;\n    }\n  }\n  return out;\n}\n\n// ---------- KPIs & Score ----------\nfunction computeKPIs(sections: Section[]): KPIs {\n  const withDur = sections.map(s => ({ ...s, durationSec: +(s.t1 - s.t0).toFixed(1) }));\n  const total = withDur.reduce((a, b) => a + (b.durationSec || 0), 0) || 1;\n\n  const names: SectionName[] = [\"greeting\", \"opening\", \"discovery\", \"pitch\", \"pricing\", \"closing\"];\n  const percentTime = names.reduce<Record<SectionName, number>>((acc, name) => {\n    const dur = withDur\n      .filter(s => s.name === name)\n      .reduce((a, b) => a + (b.durationSec || 0), 0);\n    acc[name] = +((dur / total) * 100).toFixed(1);\n    return acc;\n  }, { greeting: 0, opening: 0, discovery: 0, pitch: 0, pricing: 0, closing: 0 });\n\n  const first = withDur[0];\n  const pricing = withDur.find(s => s.name === \"pricing\");\n\n  return {\n    totalSec: +total.toFixed(1),\n    percentTime,\n    timeToPricingSec: pricing ? +(pricing.t0 - first.t0).toFixed(1) : null\n  };\n}\n\nfunction scoreCall(kpis: KPIs): Score {\n  let score = 0;\n  const detail: Record<string, number> = {};\n\n  // Discovery depth (0–35) – peak near 45%\n  const disc = kpis.percentTime.discovery ?? 0;\n  const discOK = Math.max(0, 1 - Math.abs(disc - 45) / 45);\n  detail.discovery = Math.round(discOK * 35); score += detail.discovery;\n\n  // Pricing presence (0–25)\n  const pricingPct = kpis.percentTime.pricing ?? 0;\n  detail.pricing = pricingPct > 3 ? 25 : pricingPct > 0 ? 12 : 0; score += detail.pricing;\n\n  // Opening + Closing coverage (0–20)\n  const oc = (kpis.percentTime.opening ?? 0) + (kpis.percentTime.closing ?? 0);\n  const ocOK = Math.max(0, Math.min(1, oc / 20));\n  detail.oppClose = Math.round(ocOK * 20); score += detail.oppClose;\n\n  // Pitch balance (0–20) – don’t dominate the call\n  const pitch = kpis.percentTime.pitch ?? 0;\n  const pitchOK = pitch <= 50 ? 1 : Math.max(0, 1 - (pitch - 50) / 50);\n  detail.pitchBalance = Math.round(pitchOK * 20); score += detail.pitchBalance;\n\n  return { total: Math.max(0, Math.min(100, score)), detail };\n}\n\n// ---------- Handler ----------\nexport async function POST(req: NextRequest) {\n  try {\n    const formData = await req.formData();\n    const file = formData.get(\"file\");\n    const rulesRaw = formData.get(\"rules\");\n\n    if (!(file instanceof File)) {\n      return Response.json(\n        { ok: false, error: \"No file uploaded\" } satisfies AnalyzeErr,\n        { status: 400 }\n      );\n    }\n\n    const rules: Rules = rulesRaw ? JSON.parse(String(rulesRaw)) : {};\n    const fileName = file.name;\n\n    // Forward to Whisper service\n    const whisperForm = new FormData();\n    whisperForm.append(\"file\", file, fileName);\n    whisperForm.append(\"model_size\", \"small\");\n    whisperForm.append(\"vad\", \"true\");\n    whisperForm.append(\"word_timestamps\", \"false\");\n\n    const controller = new AbortController();\n    const timer = setTimeout(() => controller.abort(), 180_000);\n\n    let whisperResp: Response;\n    try {\n      whisperResp = await fetch(WHISPER_URL, {\n        method: \"POST\",\n        body: whisperForm,\n        signal: controller.signal\n      });\n    } catch (err) {\n      clearTimeout(timer);\n      const msg = err instanceof Error ? err.message : String(err);\n      return Response.json(\n        { ok: false, error: `Whisper server unreachable: ${msg}` } satisfies AnalyzeErr,\n        { status: 502 }\n      );\n    }\n    clearTimeout(timer);\n\n    if (!whisperResp.ok) {\n      const text = await whisperResp.text();\n      return Response.json(\n        { ok: false, error: `Whisper service error ${whisperResp.status}: ${text || \"no body\"}` } satisfies AnalyzeErr,\n        { status: 502 }\n      );\n    }\n\n    const json = (await whisperResp.json()) as WhisperOk | WhisperErr;\n    if (!json.ok) {\n      return Response.json(\n        { ok: false, error: json.error || \"Transcription failed\" } satisfies AnalyzeErr,\n        { status: 502 }\n      );\n    }\n\n    const transcript = json.transcript || \"\";\n    const stats: AnalyzeStats = {\n      durationSec: json.stats?.durationSec,\n      wordCount: json.stats?.wordCount\n    };\n\n    // ---- Rules ----\n    const failures: string[] = [];\n    if (\n      typeof rules.minDurationSec === \"number\" &&\n      typeof stats.durationSec === \"number\" &&\n      stats.durationSec < rules.minDurationSec\n    ) {\n      failures.push(`Minimum duration ${rules.minDurationSec}s not met (got ${stats.durationSec}s).`);\n    }\n    if (typeof rules.minWords === \"number\") {\n      const wc = stats.wordCount ?? 0;\n      if (wc < rules.minWords) failures.push(`Minimum words ${rules.minWords} not met (got ${wc}).`);\n    }\n    const lower = transcript.toLowerCase();\n    if (Array.isArray(rules.requireKeywords)) {\n      for (const kw of rules.requireKeywords) {\n        if (kw && !lower.includes(kw.toLowerCase())) failures.push(`Missing required keyword: \"${kw}\".`);\n      }\n    }\n    if (Array.isArray(rules.forbiddenKeywords)) {\n      for (const kw of rules.forbiddenKeywords) {\n        if (kw && lower.includes(kw.toLowerCase())) failures.push(`Contains forbidden keyword: \"${kw}\".`);\n      }\n    }\n\n    // ---- Segmentation + KPIs + Score ----\n    const segments: WhisperSegment[] = json.segments ?? [];\n    const sections: Section[] = segments.length\n      ? segmentize(segments)\n      : [{ name: \"discovery\", t0: 0, t1: stats.durationSec ?? 0 }];\n\n    const kpis: KPIs = computeKPIs(sections);\n    const score: Score = scoreCall(kpis);\n\n    const resp: AnalyzeOk = {\n      ok: true,\n      transcript,\n      passes: failures.length === 0,\n      failures,\n      stats,\n      sections,\n      kpis,\n      score,\n      fileName\n    };\n\n    return Response.json(resp);\n  } catch (err) {\n    const msg = err instanceof Error ? err.message : \"Unexpected server error\";\n    return Response.json(\n      { ok: false, error: msg } satisfies AnalyzeErr,\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":"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","debugId":null}}]
}